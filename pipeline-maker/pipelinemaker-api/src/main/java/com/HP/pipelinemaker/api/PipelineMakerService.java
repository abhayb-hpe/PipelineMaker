//  (c) Copyright 2013 Hewlett-Packard Development Company, L.P.
//  Autogenerated
package com.HP.pipelinemaker.api;

import java.util.UUID;

import com.HP.pipelinemaker.model.PipelineMaker;
import com.hp.api.NotFoundException;
import com.hp.of.lib.dt.DataPathId;
import com.hp.api.Id;

import java.util.Collection;

/**
 * Sample PipelineMaker service interface.
 */
public interface PipelineMakerService {

    /**
     * Get all PipelineMaker items.
     *
     * @return collection of all PipelineMaker items
     */
    public Collection<PipelineMaker> getAll();

    /** 
     * Creates a new PipelineMaker entity.
     *
     * @param id unique id to be assigned to the new PipelineMaker entity.
     * @param name PipelineMaker name
     * @return newly created PipelineMaker
     */
    public PipelineMaker create(String name);

    /**
     * Get the PipelineMaker with the specified unique id.
     *
     * @param uid unique id of the PipelineMaker entity to be retrieved
     * @return PipelineMaker with the given unique id
     * @throws NotFoundException if the requested PipelineMaker was not found
     */
    public PipelineMaker get(Id<PipelineMaker, UUID> id);

    /**
     * Delete the PipelineMaker with the specified id.
     *
     * @param uid unique id of the PipelineMaker entity to be deleted
     * @return deleted PipelineMaker
     * @throws NotFoundException if the requested PipelineMaker was not found
     */
    public void delete(Id<PipelineMaker, UUID> id);

	boolean pipelinemakerAddExistingDataPaths();

	boolean pipelinemakerAddDataPath(DataPathId datapath);

	boolean pipelinemakerRemoveDataPath(DataPathId datapath);

	boolean pipelinemakerGetTableFeaturesForDataPath(DataPathId datapath);

}
